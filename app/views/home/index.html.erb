<% total_users = 50 %>

<script>
  "use strict";

  var total_users = <%= total_users %>;
  var queue = _.shuffle(_.range(1, total_users + 1));
  var in_progress = 0;
  var max_in_progress = 10;
  var user_cookies = {};

  function start_user_requests() {
    while (in_progress < max_in_progress) {
      user_request();
    }
  }

  function stagger_next_user_request(delay, stagger) {
    // By default, send request in 1-2 second
    if (! delay && delay != 0) {
      delay = 10;
    }
    if (! stagger && stagger != 0) {
      stagger = 50;
    }
    setTimeout(function() { user_request() }, rand_from_range(delay, delay+stagger));
  }

  function handle_response(user_id, html) {
    var $user = $("#user_" + user_id),
        $userview_wrapper = $user.closest(".userview-wrapper"),
        delay = 0;
    in_progress--;

    // add user back to the end of the queue
    queue.push(user_id);
    $user.html(html);

    // Delay for 500ms, minus the time it's already been displayed
    delay = 100 - Math.max(0, ((new Date).getTime() - $user.data("start")));
    setTimeout(function() { $userview_wrapper.removeClass("in_progress") }, delay);
  }

  function user_request() {
    var user_id = null,
        $user = null,
        $userview_wrapper = null,
        headers = {};

    if ( ! running() || in_progress >= max_in_progress) {
      return;
    }

    user_id = queue.shift();
    in_progress++;

    $user = $("#user_" + user_id);
    $userview_wrapper = $user.closest(".userview-wrapper");

    $userview_wrapper.addClass("in_progress");
    $user.data("start", (new Date).getTime());

    if (users_are_signed_in()) {
      // Very very basic authentication :)
      headers["Authorization"] = user_id
    }
    else if (user_cookies[user_id]) {
      // Set the stashed "cookie" for this user.
      // Since we cannot actually pass the same cookie for all users
      // we fake it with a header which the userviews application
      // will proxy.
      headers["fluidfeatures_anonymous_cookie"] = user_cookies[user_id]
      //$.cookie("fluidfeatures_anonymous", user_cookies[user_id]);
      //console.log("use cookie for user " + user_id, user_cookies[user_id]);
    }
    else {
      delete headers["fluidfeatures_anonymous_cookie"];
      //$.removeCookie("fluidfeatures_anonymous");
    }

    $.ajax(
      "/features",
      {
        headers: headers
      }
    ).success(function(html, textStatus, jqXHR) {
      // Stash cookie from this user
      user_cookies[user_id] = jqXHR.getResponseHeader("fluidfeatures_anonymous_cookie");
      if (user_cookies[user_id]) {
        console.log("got cookie for user " + user_id, user_cookies[user_id]);
      }
      handle_response(user_id, html);      
      stagger_next_user_request();
    }).fail(function(xhr) {
      handle_response(user_id, "Response failed");  
      // If we failed, try again in 2-5 seconds
      stagger_next_user_request(2000, 3000);
    });
  }
  
  function rand_from_range(from, to) {
    return Math.floor((Math.random()*(to-from))+from);
  }

  function running() {
    return $("input[name='running']").attr('checked');
  }

  function users_are_signed_in() {
    return $("input[name='signed-in-users']").attr('checked');
  }

  $(document).ready(function() {

    $("input[name='running']").live("change", function() {
      if (running()) {
        start_user_requests();
      }
    });

    console.log("running?", running());
    if (running()) {
      start_user_requests();
    }

  })();

</script>

<header>
  <div class="logo-title">
    <div class="logo">&nbsp;</div>
    <h1>Demo Application</h1>
    <h2>User Views</h2>
  </div>
  <div class="dialog">
    <p>Here is the view of this application from the perspective of <%= total_users %> different users.</p>
    <p>Each user has different features enabled.</p>
    <p>This site is using <a href="http://www.fluidfeatures.com">FluidFeatures.com</a> to enable / disable features for this user-base.</p>
    <div class="controls">
      Users are <div class="onoffswitch">
          <input type="checkbox" name="signed-in-users" class="onoffswitch-checkbox" id="signed-in-users" checked>
          <label class="onoffswitch-label" for="signed-in-users">
              <div class="onoffswitch-inner">
                  <div class="onoffswitch-active">Signed-in</div>
                  <div class="onoffswitch-inactive">Anonymous</div>
              </div>
              <div class="onoffswitch-switch"></div>
          </label>
      </div>
      Demo is <div class="onoffswitch">
          <input type="checkbox" name="running" class="onoffswitch-checkbox" id="running" checked>
          <label class="onoffswitch-label" for="running">
              <div class="onoffswitch-inner">
                  <div class="onoffswitch-active">Running</div>
                  <div class="onoffswitch-inactive">Paused</div>
              </div>
              <div class="onoffswitch-switch"></div>
          </label>
      </div>
    </div>
  </div>
</header>

<!-- One window for each user -->
<div class="users">
  <% (1..total_users).each do |user_id| %>
    <div class="userview-wrapper">
      User: <%= user_id %>
      <div class="userview" id="user_<%= user_id %>"></div>
    </div>
  <% end %>
</div>
