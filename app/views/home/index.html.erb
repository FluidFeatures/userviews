<% total_users = 50 %>

<script>
  "use strict";

  var total_users = <%= total_users %>;
  var paused = false;

  function start_user_requests() {
    var user_ids = _.shuffle(_.range(1, total_users + 1)),
        i = 0,
        user_id = null;
      
    for (i in user_ids) {
      // Send request immediately sometime between immediately and 5 seconds
      stagger_user_request(user_ids[i], 0, 5000)
    }
  }

  function stagger_user_request(user_id, delay, stagger) {
    // By default, send request in 1-2 second
    if (! delay && delay != 0) {
      delay = 1000;
    }
    if (! stagger && stagger != 0) {
      stagger = 1000;
    }
    setTimeout(function() { user_request(user_id) }, rand_from_range(delay, delay+stagger));
  }

  function handle_response(user_id, html) {
    var $user = $("#user_" + user_id),
        $userview_wrapper = $user.closest(".userview-wrapper");
    $user.html(html);
    $userview_wrapper.addClass('new');
    $user.data("start", (new Date).getTime());
  }

  function user_request(user_id) {
    var $user = $("#user_" + user_id),
        $userview_wrapper = $user.closest(".userview-wrapper"),
        delay = null;
    if (paused) {
      $userview_wrapper.removeClass('new');
      return;
    }
    else {
      // Delay for 500ms, minus the time it's already been displayed
      delay = 500 - Math.max(0, ((new Date).getTime() - $user.data("start")));
      setTimeout(function() { $userview_wrapper.removeClass('new') }, delay);
    }
    $.ajax(
      "/features",
      {
        headers: {
          // Very very basic authentication :)
          Authorization: user_id
        }
      }
    ).success(function(html) {
      handle_response(user_id, html);      
      stagger_user_request(user_id);
    }).fail(function(xhr) {
      handle_response(user_id, "Response failed");  
      // If we failed, try again in 2-5 seconds
      stagger_user_request(user_id, 2000, 3000);
    });
  }
  
  $(".pause").live("click", function() {
    toggle_paused();
    $(this).html(paused ? "Start" : "Pause");
  })

  function rand_from_range(from, to) {
    return Math.floor((Math.random()*(to-from))+from);
  }

  function toggle_paused() {
    paused = ! paused;
    if ( ! paused ) {
      start_user_requests();
    }
  }

  (function() {
    start_user_requests();
  })();

</script>

<h1>User Views</h1>

<p>Here is the view of this application from the perspective of <%= total_users %> different users. Each user has different features enabled. This site is using FluidFeatures.com to enable / disable features for this user-base.</p>

<!-- Feature images and descriptions -->
<div class="features">
  <h2>Controls</h2>
  <div class="controls">
    <button class="pause">Pause</button>
  </div>
  <h2>Features</h2>
  <% @feature_names.each do |feature_name| %>
    <div class="feature">
      <img src="/img/feature-icons/<%= feature_name %>.png">
      <%= feature_name %>
    </div>
  <% end %>
</div>

<!-- One window for each user -->
<div class="users">
  <% (1..total_users).each do |user_id| %>
    <div class="userview-wrapper">
      User: <%= user_id %>
      <div class="userview" id="user_<%= user_id %>"></div>
    </div>
  <% end %>
</div>
